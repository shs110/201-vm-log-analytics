{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmPrefix": {
      "defaultValue": "myvm",
      "type": "string",
      "metadata": {
        "description": "Name to prefix the VMs and resources"
      }
    },

    "vmSize": {
      "defaultValue": "Standard_D2_v2",
      "allowedValues": [
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-8",
        "Standard_GS5-16",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A5",
        "Standard_A4",
        "Standard_A6",
        "Standard_A7",
        "Basic_A0",
        "Basic_A1",
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3_v2_Promo",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2_Promo",
        "Standard_D11_v2_Promo",
        "Standard_D12_v2_Promo",
        "Standard_D13_v2_Promo",
        "Standard_D14_v2_Promo",
        "Standard_F1",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16",
        "Standard_A1_v2",
        "Standard_A2m_v2",
        "Standard_A2_v2",
        "Standard_A4m_v2",
        "Standard_A4_v2",
        "Standard_A8m_v2",
        "Standard_A8_v2",
        "Standard_D2_v3",
        "Standard_D4_v3",
        "Standard_D8_v3",
        "Standard_D16_v3",
        "Standard_D32_v3",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_H8",
        "Standard_H16",
        "Standard_H8m",
        "Standard_H16m",
        "Standard_H16r",
        "Standard_H16mr",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3_v2_Promo",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2_Promo",
        "Standard_DS11_v2_Promo",
        "Standard_DS12_v2_Promo",
        "Standard_DS13_v2_Promo",
        "Standard_DS14_v2_Promo",
        "Standard_F1s",
        "Standard_F2s",
        "Standard_F4s",
        "Standard_F8s",
        "Standard_F16s",
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D16s_v3",
        "Standard_D32s_v3",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_D64_v3",
        "Standard_D64s_v3",
        "Standard_E2_v3",
        "Standard_E4_v3",
        "Standard_E8_v3",
        "Standard_E16_v3",
        "Standard_E32_v3",
        "Standard_E64_v3",
        "Standard_E2s_v3",
        "Standard_E4s_v3",
        "Standard_E8s_v3",
        "Standard_E16s_v3",
        "Standard_E32-8s_v3",
        "Standard_E32-16s_v3",
        "Standard_E32s_v3",
        "Standard_E64-16s_v3",
        "Standard_E64-32s_v3",
        "Standard_E64s_v3",
        "Standard_NV6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NC6",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r"
      ],
      "type": "string",
      "metadata": {
        "description": "Specify VM size"
      }
    },

    "vmAdminUsername": {
      "defaultValue": "vmAdmin",
      "type": "string",
      "metadata": {
        "description": "Username for the VM admin."
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the VM admin."
      }
    },
    "vmImagePublisher": {
      "defaultValue": "MicrosoftWindowsServer",
      "allowedValues": [
        "MicrosoftWindowsServer",
        "MicrosoftSQLServer",
        "Microsoft-DSVM"
      ],
      "type": "string",
      "metadata": {
        "description": "Image publisher."
      }
    },
    "vmImageOffer": {
      "defaultValue": "WindowsServer",
      "allowedValues": [
        "WindowsServer",
        "SQL2008R2SP3-WS2008R2SP1",
        "SQL2012SP4-WS2012R2",
        "SQL2014SP2-WS2012R2",
        "SQL2016SP1-WS2016",
        "SQL2017-WS2016",
        "DSVM-Windows"
      ],
      "type": "string",
      "metadata": {
        "description": "Specifies the offer of the platform image or marketplace image used to create the virtual machine."
      }
    },
    "vmImageSku": {
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Nano-Server",
        "2016-Datacenter-with-Containers",
        "2016-Datacenter",
        "Enterprise",
        "Standard",
        "Server-2016",
        "2019-Datacenter"
      ],
      "type": "string",
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "vmVnetName": {
      "defaultValue": "adVnet",
      "type": "string",
      "metadata": {
        "description": "Name of the VNET to attach the VM to."
      }
    },
    "vmVnetPrefix": {
      "defaultValue": "10.0.0.0/16",
      "type": "string",
      "metadata": {
        "description": "Address range of the VNET to attach the VM to."
      }
    },
    "vmSubnetName": {
      "defaultValue": "adSubnet",
      "type": "string",
      "metadata": {
        "description": "Name of the subnet within the VNET to attach the VM to."
      }
    },
    "vmSubnetPrefix": {
      "defaultValue": "10.0.0.0/24",
      "type": "string",
      "metadata": {
        "description": "Address range of the subnet where the NIC will be attached"
      }
    },
 
    "vmNicName": {
      "defaultValue": "mynic",
      "type": "string",
      "metadata": {
        "description": "Name of the NIC. Will be prefixed with the name of the VM."
      }
    },
    "vmOsDiskName": {
      "defaultValue": "osdisk",
      "type": "string",
      "metadata": {
        "description": "Name of the OS disk. Will be prefixed with the name of the VM."
      }
    },
    "vmDataDiskNameArray": {
      "defaultValue": [
        "datadisk01",
        "datadisk02"
      ],
      "type": "array",
      "metadata": {
        "description": "Name of the managed disks. Will be prefixed with the name of the VM."
      }
    },
    "vmManagedDiskType": {
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "StandardSSD_LRS",
        "Premium_LRS"
      ],
      "type": "string",
      "metadata": {
        "description": "Type of the managed disks (Standard_LRS, or Premium_LRS)"
      }
    },
    "nicIpAllocationMethod": {
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "type": "string",
      "metadata": {
        "description": "Select IP Allocation method for VM NICs"
      }
    },
    "vmIpAddresses": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Select IP Address for static network interface of VMs. Will be ignored if nicIpAllocationMethod was chosen to be 'Dynamic'"
      }
    },
    "vmLogAnalyticsWorkspaceName": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Name of the Log Analytics Workspace"
      }
    },
    "logAnalyticsRegion": {
      "defaultValue": "Australia East",
      "allowedValues": [
        "West Europe",
        "East US",
        "Southeast Asia",
        "australiasoutheast",
        "Australia East"
      ],
      "type": "string",
      "metadata": {
        "description": "Select OMS region"
      }
    },

    "logAnalyticsSku": {
      "defaultValue": "pergb2018",
      "allowedValues": [
        "free",
        "pernode",
        "standalone",
        "pergb2018"
      ],
      "type": "string",
      "metadata": {
        "description": "Select OMS Sku"
      }
    },
    "alertName": {
      "defaultValue": "vmHeartbeatAlert",
      "type": "string",
      "metadata": {
        "description": "Name of the monitoring alert that will be used to monitor the vm heartbeat"
      }
    },
    "alertDescription": {
      "defaultValue": "Sends an email alert whenever the vm heartbeat count is less than 1",
      "type": "string",
      "metadata": {
        "description": "Description of the monitoring alert that will be used to monitor the vm heartbeat"
      }
    },
    "alertSeverity": {
      "defaultValue": 3,
      "allowedValues": [
        0,
        1,
        2,
        3,
        4
      ],
      "type": "int",
      "metadata": {
        "description": "Severity level of the monitoring alert"
      }
    },
    "actionGroupEmail": {
      "defaultValue": "saadmansayed@gmail.com",
      "type": "string",
      "metadata": {
        "description": "Specify target email where the monitoring alert will be sent once triggered"
      }
    }

  },
  "variables": {

    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vmVnetName'))]",
    "vmSubnetRef": "[concat(variables('vnetId'),'/subnets/', parameters('vmSubnetName'))]",
    "vmNamePrefixLowerCase": "[toLower(parameters('vmPrefix'))]",
    "vmTagValue": "[concat(deployment().name,',',guid(resourceGroup().id, deployment().name))]",
    "publicIPAddressName": "testvmpublicIp",
    "actionGroupName": "emailAlertGroup",
    "actionGroupShortName": "emailAlert",
    "vmConfigurationFunction": "createTextFile.ps1\\createTextFile",
    "createTextFileScriptUri": "https://raw.githubusercontent.com/shs110/201-vm-log-analytics/master/201-vm-with-logAnalytics/createTextFile.zip"

  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "name": "[parameters('vmVnetName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vmVnetPrefix')]"
          ]
        }
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "name": "[concat(parameters('vmVnetName'), '/', parameters('vmSubnetName'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressPrefix": "[parameters('vmSubnetPrefix')]"

      },
      "dependsOn": [

        "[parameters('vmVnetName')]"
      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmPrefix'),'-',parameters('vmNicName'))]",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('publicIPAddressName')]",
        "[parameters('vmSubnetName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId ('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
              },
              "privateIPAllocationMethod": "[if(equals(parameters('nicIpAllocationMethod'),'Dynamic'),'Dynamic','Static')]",
              "privateIPAddress": "[if(equals(parameters('nicIpAllocationMethod'),'Dynamic'),'null', parameters('vmIpAddresses')[copyIndex()])]",
              "subnet": {
                "id": "[variables('vmSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmPrefix')]",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "tags": {
        "SampleData": "[variables('vmTagValue')]"
      },
      "dependsOn": [
        "[concat(parameters('vmPrefix'),'-',parameters('vmNicName'))]"

      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('vmImagePublisher')]",
            "offer": "[parameters('vmImageOffer')]",
            "sku": "[parameters('vmImageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmNamePrefixLowerCase'),'-', parameters('vmOsDiskName'))]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('vmManagedDiskType')]"
            }
          }
        },
        "osProfile": {
          "computerName": "[parameters('vmPrefix')]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces/', concat(parameters('vmPrefix'),'-',parameters('vmNicName')))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('vmLogAnalyticsWorkspaceName')]",
      "location": "[parameters('logAnalyticsRegion')]",
      "properties": {
        "sku": {
          "name": "[parameters('logAnalyticsSku')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmPrefix'),'/LogAnalytics')]",
      "apiVersion": "2018-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[parameters('vmPrefix')]",
        "[parameters('vmLogAnalyticsWorkspaceName')]"
      ],
      "properties": {
        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
        "type": "MicrosoftMonitoringAgent",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "workspaceId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('vmLogAnalyticsWorkspaceName')), '2017-03-15-preview').customerId]"
        },
        "protectedSettings": {
          "workspaceKey": "[listkeys(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('vmLogAnalyticsWorkspaceName')), '2017-03-15-preview').primarySharedKey]"
        }
      }
    },
    {
      "type": "Microsoft.Insights/actionGroups",
      "apiVersion": "2018-03-01",
      "name": "[variables('actionGroupName')]",
      "dependsOn": [
        "[parameters('vmLogAnalyticsWorkspaceName')]"
      ],
      "location": "Global",
      "properties": {
        "groupShortName": "[variables('actionGroupShortName')]",
        "enabled": true,
        "emailReceivers": [
          {
            "name": "vmHeartbeatAlert",
            "emailAddress": "[parameters('actionGroupEmail')]"
          }
        ]
      }
    },
    {
      "name": "[parameters('alertName')]",
      "type": "Microsoft.Insights/metricAlerts",
      "location": "global",
      "apiVersion": "2018-03-01",
      "dependsOn": [
        "[variables('actionGroupName')]"
      ],
      "tags": {},
      "properties": {
        "description": "[parameters('alertDescription')]",
        "severity": "[parameters('alertSeverity')]",
        "enabled": true,
        "scopes": [ "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('vmlogAnalyticsWorkspaceName'))]" ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT1M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "threshold": 1,
              "name": "Metric1",
              "metricNamespace": "Microsoft.OperationalInsights/workspaces",
              "metricName": "Heartbeat",
              "dimensions": [
                {
                  "name": "Computer",
                  "operator": "Include",
                  "values": [
                    "*"
                  ]
                }
              ],
              "operator": "LessThan",
              "timeAggregation": "Count",
              "monitorTemplateType": 8,
              "criterionType": "StaticThresholdCriterion"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmPrefix'),'/createTextFile')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.19",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[variables('createTextFileScriptUri')]",
          "ConfigurationFunction": "[variables('vmConfigurationFunction')]",
          "Properties": {
            "vmTagValue": "[variables('vmTagValue')]"
          }
        }
      },
      "dependsOn": [
        "[parameters('vmPrefix')]"
      ]
    }
  ],
  "outputs": {

  }
}